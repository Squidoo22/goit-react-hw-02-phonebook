{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","App.js","index.js"],"names":["module","exports","Section","title","children","ContactForm","state","name","number","randomNameId","uuidv4","randomNumberId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","label","fieldInput","type","onChange","id","pattern","required","placeholder","Component","ContactListItem","onDeleteContact","listItem","onClick","ContactList","contacts","map","contact","ContactFilter","htmlFor","App","filter","addContact","isInContacts","alert","newContact","toLowerCase","includes","length","deleteContact","contactId","prevState","changeFilter","e","target","getFilteredContacts","normalizedFilter","options","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71a73bf0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3XAUF\",\"fieldInput\":\"ContactForm_fieldInput__3sCKE\"};","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title = '', children }) => {\r\n  return (\r\n    <div>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import styles from './ContactForm.module.css';\r\nimport React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  randomNameId = uuidv4();\r\n  randomNumberId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name:\r\n          <input\r\n            className={styles.fieldInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.randomNameId}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number:\r\n          <input\r\n            className={styles.fieldInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"+380 (00) 000-00-00\"\r\n            id={this.randomNumberId}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p>\r\n        {name}: {number}\r\n      </p>{' '}\r\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = { contacts: PropTypes.array };\r\n\r\nexport default ContactList;\r\n","const ContactFilter = ({ value, onChange }) => (\r\n  <>\r\n    <div>\r\n      <label htmlFor=\"filter\">Find contacts by name</label>\r\n    </div>\r\n    <input\r\n      type=\"text\"\r\n      id=\"filter\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default ContactFilter;\r\n","import React, { Component } from 'react';\r\nimport Section from './components/Section';\r\nimport ContactsForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport ContactFilter from './components/ContactFilter';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    if (this.isInContacts(name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    const newContact = { id: uuidv4(), name, number };\r\n    this.setState(({ contacts }) => ({ contacts: [newContact, ...contacts] }));\r\n  };\r\n\r\n  isInContacts = name => {\r\n    name = name.toLowerCase();\r\n    return (\r\n      this.state.contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(name),\r\n      ).length > 0\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <ContactsForm\r\n            options={this.state}\r\n            onSubmit={this.addContact}\r\n          ></ContactsForm>\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <ContactFilter onChange={this.changeFilter} />\r\n          <ContactList\r\n            contacts={this.getFilteredContacts()}\r\n            onDeleteContact={this.deleteContact}\r\n          ></ContactList>\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}